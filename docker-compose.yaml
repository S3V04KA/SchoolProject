version: '3'

services:
  postgres:
    image: postgres:15-alpine
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: auth_db
    ports:
      - 5432
    volumes:
      - ./db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: test@test.com
      PGADMIN_DEFAULT_PASSWORD: test
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin

  auth_backend:
    build:
      context: auth_backend
      dockerfile: Dockerfile
    command: sh ./entrypoint.sh
    tty: true
    volumes:
      - ./auth_backend:/backend/
      - ./.docker/.ipython:/root/.ipython:cached
    env_file: .env
    environment:
      PYTHONPATH: .
      DATABASE_URL: "postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@postgres:5432/auth_db"
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '8000:8000'

  template:
    build:
      context: template_module
      dockerfile: Dockerfile
    command: sh ./entrypoint.sh
    tty: true
    volumes:
      - ./template_module:/template/
    depends_on:
      - auth_backend
    ports:
      - '8001:8001'